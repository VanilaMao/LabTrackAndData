<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachProperties="clr-namespace:Lab.Theme.AttachProperties">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Commons/ButtonCommon.xaml" />
        <ResourceDictionary Source="Commons/ComboBoxCommon.xaml" />
        <ResourceDictionary Source="Commons/PopupCommon.xaml" />
        <ResourceDictionary Source="Commons/TextBoxCommon.xaml" />
        <ResourceDictionary Source="ComboBoxItemStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource Button.CornerRadius}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow"
                                  Width="8"
                                  Height="5"
                                  Margin="0,1,4,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource ComboBox.DropDownArrow}"
                                  Fill="{TemplateBinding Foreground}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen,
                                    Mode=TwoWay,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="3">
                <Popup.PlacementRectangle>
                    <MultiBinding Converter="{StaticResource PopupPlacementRectangleConverter}">
                        <Binding ElementName="dropShadowBorder" Path="Padding" />
                        <Binding ElementName="templateRoot" Path="ActualWidth" />
                        <Binding ElementName="templateRoot" Path="ActualHeight" />
                        <Binding Path="Placement" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Popup.PlacementRectangle>
                <Border x:Name="dropShadowBorder"
                        Background="Transparent"
                        Effect="{StaticResource Popup.DropShadowEffect}"
                        Padding="{StaticResource Popup.DropShadowThickness}">
                    <Border x:Name="dropDownBorder"
                            MinWidth="{Binding ElementName=templateRoot,
                                               Path=ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{StaticResource Popup.Background.Normal}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=dropDownBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Foreground="{TemplateBinding Foreground}"
                          IsChecked="{Binding IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="{StaticResource Control.Opacity.Disabled}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource ComboBox.MouseOver.Foreground}" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ComboBox.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="attachProperties:ThemeProperties.ButtonClass" Value="Inverted">
                <Setter TargetName="toggleButton" Property="Background" Value="{StaticResource Button.Background.Inverted}"/>
                <Setter TargetName="toggleButton" Property="BorderBrush" Value="{StaticResource Button.Border.Inverted}"/>
                <Setter TargetName="toggleButton" Property="BorderThickness" Value="1"/>
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource Button.Foreground.Inverted}"/>
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Foreground.Inverted}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBox.ContextMenu}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="3">
                <Popup.PlacementRectangle>
                    <MultiBinding Converter="{StaticResource PopupPlacementRectangleConverter}">
                        <Binding ElementName="dropShadowBorder" Path="Padding" />
                        <Binding ElementName="templateRoot" Path="ActualWidth" />
                        <Binding ElementName="templateRoot" Path="ActualHeight" />
                        <Binding Path="Placement" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Popup.PlacementRectangle>
                <Border x:Name="dropShadowBorder"
                        Background="Transparent"
                        Effect="{StaticResource Popup.DropShadowEffect}"
                        Padding="{StaticResource Popup.DropShadowThickness}">
                    <Border x:Name="dropDownBorder"
                            MinWidth="{Binding ElementName=templateRoot,
                                               Path=ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{StaticResource Popup.Background.Normal}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=dropDownBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="Transparent">
                <TextBox x:Name="PART_EditableTextBox"
                         Margin="{TemplateBinding Padding}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         CaretBrush="{Binding RelativeSource={RelativeSource Self},
                                              Path=Foreground}"
                         IsReadOnly="{Binding IsReadOnly,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                         Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="{StaticResource Control.Opacity.Disabled}" />
            </Trigger>
            <Trigger SourceName="toggleButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource ComboBox.MouseOver.Foreground}" />
            </Trigger>
            <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ComboBox.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource ComboBox.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="attachProperties:ThemeProperties.ButtonClass" Value="Inverted">
                <Setter TargetName="toggleButton" Property="Background" Value="{StaticResource Button.Background.Inverted}"/>
                <Setter TargetName="toggleButton" Property="BorderBrush" Value="{StaticResource Button.Border.Inverted}"/>
                <Setter TargetName="toggleButton" Property="BorderThickness" Value="1"/>
                <Setter TargetName="toggleButton" Property="Foreground" Value="{StaticResource Button.Foreground.Inverted}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Standard style  -->

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="FocusVisualStyle" Value="{StaticResource Control.FocusVisualStyle}" />
        <Setter Property="Foreground" Value="{StaticResource ComboBox.Static.Foreground}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxDropDownHeight" Value="250" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="6,5,7,5" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Control.ErrorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>